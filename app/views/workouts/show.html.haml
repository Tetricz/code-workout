- course_offering ||= @workout_offering.andand.course_offering
- workout_score ||= @workout.score_for(current_user, @workout_offering)
= render partial: 'layouts/breadcrumb'
- time_limit = (@workout_offering ? @workout_offering.time_limit_for(current_user) : nil)

= render partial: 'workout_scores/time_remaining',
  locals: { workout_score: workout_score }
%h1= @workout.name

- if @workout.tags.any?
  %p
    Tags:
    - @workout.tags.each do |t|
      =link_to t.name, exercises_search_path(search: t.name), class: 'tag'

- if course_offering && course_offering.is_staff?(current_user)
  %table.table.table-striped{ style: 'width: auto' }
    %thead
      %tr
        %th Course
        %th Open
        %th Due
        %th Close
        %th Time Limit
    %tbody
      - @workout.workout_offerings.each do |woff|
        - if woff.course_offering.is_staff?(current_user)
          %tr
            %td= woff.course_offering.display_name
            %td
              - if woff.opening_date
                = l user_time(current_user, woff.opening_date)
            %td
              - if woff.soft_deadline
                = l user_time(current_user, woff.soft_deadline)
            %td
              - if woff.hard_deadline
                = l user_time(current_user, woff.hard_deadline)
            %td
              - if time_limit
                = "#{n_to_s(time_limit)} minutes"
- elsif @workout_offering
  %p.due
    - if @workout_offering.soft_deadline
      Due:
      = l user_time(current_user, @workout_offering.soft_deadline)
    - elsif @workout_offering.hard_deadline
      Due:
      = l user_time(current_user, @workout_offering.hard_deadline)
    &nbsp;&nbsp;&nbsp;Score:
    - if workout_score
      - if workout_score.show_feedback?
        = workout_score.score
      - else
        hidden
    - else
      0
    = '/'
    = @workout.total_points
-else
  %p.due
    = "Score: " + (workout_score ? workout_score.score.to_s  : "0") + " / " + @workout.total_points.to_s

- if @workout.description
  %p= markdown(@workout.description)

- manages_course = current_user ? (current_user.global_role.is_admin? || course_offering.andand.is_manager?(current_user)) : false
-# -if params[:review_user_id].nil? && !@workout_offering.nil? && @workout_offering.course_offering.is_staff?(current_user)
-#   -summary = @workout_offering.workout_offering_score_summary
-#   WorkOut Summary: 
-#   %br
-#     Start at least one exercise
-#     .progress{:style => "width: 50%;"}
-#       -start_exercise = format('%.2f', (summary.start_students.to_f / summary.all_students.to_f) * 100)
-#       .progress-bar{:role => "progressbar", :style => "width: #{start_exercise}%;"} #{start_exercise}%
-#   %br
-#     Average workout score
-#     -average_score = 0
-#     -if summary.total_workout_score != 0.0
-#       -average_score = format('%.2f', (summary.total_workout_score / summary.start_students.to_f))
-#     .progress{:style => "width: 50%;"} 
-#       .progress-bar{:role => "progressbar", :style => "width: #{average_score}%;"} #{average_score}%  
-#   %br
-#     Full score students
-#     -full_score_students = 0
-#     -if summary.full_score_students != 0
-#       -full_score_students = format('%.2f', (summary.full_score_students.to_f / summary.all_students.to_f) * 100)
-#     .progress{:style => "width: 50%;"} 
-#       .progress-bar{:role => "progressbar", :style => "width: #{full_score_students}%;"} #{full_score_students}%  
%br
.col-md-4
  .btn-group
    - if @workout_offering && (@workout_offering.can_be_seen_by?(current_user) && |
      (workout_score.nil? || !workout_score.closed?) || manages_course)           |
      - button_text = nil
      - if @workout_offering.can_be_practiced_by? current_user
        - button_text = 'Start Workout'
      - elsif !manages_course && @workout_offering.andand.workout_policy.andand.no_review_before_close
        %p
          You can review your work on this workout once everyone has
          completed it.
      - else
        - button_text = 'Review Workout'
      - if button_text
        = link_to button_text,                                              |
          organization_workout_offering_practice_path(organization_id:      |
          @workout_offering.course_offering.course.organization.slug,       |
          course_id: @workout_offering.course_offering.course.slug,         |
          term_id: @workout_offering.course_offering.term.slug,             |
          id: @workout_offering.id),                                        |
          class: 'btn btn-primary'
    - elsif @workout_offering.nil?
      = link_to 'Start Workout', practice_workout_path(params[:id]), |
        class: 'btn btn-primary'
    - if course_offering.andand.is_manager? (current_user)
      = link_to 'Edit Workout',
        organization_edit_workout_path(organization_id: @organization.slug,
          course_id: @course.slug,
          term_id: @term.slug,
          workout_offering_id: @workout_offering.id),
        class: 'btn btn-default'
%br

%h2 Exercises

- if !manages_course && workout_score.nil? && @workout_offering.andand.workout_policy.andand.hide_thumbnails_before_start
  .alert.alert-warning You must begin this workout before you can see its exercises.
- elsif !manages_course && workout_score.andand.closed? && !@workout_offering.andand.shutdown? && (@workout_offering.andand.workout_policy.andand.no_review_before_close || @workout_offering.andand.workout_policy.andand.hide_thumbnails_in_review_before_close)
  .alert.alert-warning Results will be visible after the assignment closes.
- elsif @exs.empty?
  .alert.alert-warning No exercises in this workout
- else
  - user = current_user
  - @exs.in_groups_of(2, false) do |row|
    = render row,
      user: user,
      workout_offering: @workout_offering,
      workout_score: workout_score,
      workout: @workout,
      start_workout: true,
      review: false
    .clearfix